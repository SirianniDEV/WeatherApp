import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { motion } from "framer-motion"


import '@fontsource/roboto/400.css';
import Box from '@mui/material/Box';
import Typography from '@mui/material/Typography';
import TextField from '@mui/material/TextField';
import LightModeIcon from '@mui/icons-material/LightMode';
import ThermostatIcon from '@mui/icons-material/Thermostat';

import axios from 'axios'
import { useState } from 'react'
import { fontWeight } from '@mui/system';


export default function Home() {

  const [data, setData] = useState({});
  const [location, setLocation] = useState('');
  const [weather, setWeather] = useState();
  const [error, setError] = useState('');

  var apiKey ="f113c13c29780c2a563a3c2e723b645d";
  var lang = "en";
  var units = "metric";
  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=${units}&appid=${apiKey}&lang=${lang}`;
  
  const searchLocation = (event) => {
    if(event.key === "Enter"){
      axios.get(url)
      .then((response) => {
        console.clear();
        setData(response.data);
        console.log(response.data);
        setWeather(response.data.weather);
        setError("");
      }).catch(err => {
        console.log(err);
        setError("Please Enter another location")
        setData({})
        setWeather()
      })
      setLocation('')
    }
  }

  return (
    <div className={styles.container}>
        <Head>
          <title>WeatherApp</title>
          <meta name="Weather" content="Generated by create next app" />
          <link rel="icon" href="/sun.svg" />
        </Head>

        <main className={styles.main}>
          <motion.div
           initial={{ opacity: 0, y: 100 }}
           animate={{ opacity: 1, y: 0 }}
           transition={{ duration: 0.8, delay: 0.0 }}>
          <motion.div
          animate={{rotate: 360}}
          transition={{ ease: "linear", duration: 5, repeat: Infinity  }}>
          <LightModeIcon sx={{ color: "#F0A900", fontSize: 75 }} />
          </motion.div>

          </motion.div>

          <motion.div
           initial={{ opacity: 0, y: 100 }}
           animate={{ opacity: 1, y: 0 }}
           transition={{ duration: 0.8, delay: 0.2 }}>

            <Typography sx={{color: "#146E57"}} variant="h5" > What&apos;s the weather like?</Typography>
            
          </motion.div>

            <Typography> {error}</Typography> <br/>

            <motion.div
             initial={{ opacity: 0, y: 100 }}
             animate={{ opacity: 1, y: 0 }}
             transition={{ duration: 0.8, delay: 0.3 }}>

                <TextField sx={{ input: {color: "#F0732A"},}} 
                color="warning"
                label="Enter Location" 
                variant="outlined"
                helperText="Press Enter"
                value={location}
                onChange={event => setLocation(event.target.value)}
                onKeyDown={searchLocation}
                type="text"
                />
                <br/>

            </motion.div>

        {
          weather && weather.map((w, index) => {
            return (
              <div key={index}>

                <motion.div
                  style={{
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                    flexDirection: "column",
                  }}
                  
                 initial={{ opacity: 0, y: 100 }}
                 animate={{ opacity: 1, y: 0 }}
                 transition={{ duration: 0.8,}}>

                  <Typography sx={{ color: "#146E57", fontSize: 30, fontWeight: 700 }}variant="button">{data.name}</Typography>
                  <Typography sx={{ color:"#146E57", fontSize: 45, }}>  {data.main.temp} °C </Typography>
                  <Typography sx={{fontSize: 20, color: "#146E57" }}> {w.main} with {w.description} </Typography>
                    
                  <Typography sx={{fontSize: 20, color: "#146E57" }}>
                    <strong>Wind Guest:</strong> {data.wind.speed.toFixed(2)} m/s  <br/>
                  </Typography>
                  <Typography sx={{fontSize: 20, color: "#146E57" }}>
                    <strong>Feels Like:</strong> {data.main.feels_like.toFixed(2)} °C 
                  </Typography>

                </motion.div>

                
              </div>
            )
          })
        }
        </main>

    </div>
  )
}
